# For help with editing and block commenting add plugin to sublime

#macos
#Press cmd(⌘)-shift-p and type "add repo".
#Then paste in the GitHub address for this package:

#https://github.com/jaytaylor/Dockerfile.sublime-syntax

#Press cmd(⌘)-shift-p and type "install".
#Enter "Dockerfile.sublime-syntax" and press enter.
#Restart Sublime
#windows
#Replace cmd(⌘) with Ctrl
    #dpkg --add-architecture i386 \
    #&& apt-get install -yq --no-install-recommends libc6:i386 libx11-6:i386 libxext6:i386 libstdc++6:i386 libexpat1:i386 \

FROM ubuntu:20.04

MAINTAINER Akbar Dhanaliwala <akbar@lagerdata.com>

WORKDIR /app

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y wget bzip2 python3-pip texinfo expat \
    && apt-get update -yq \
    && apt-get upgrade -yq \
    && wget https://www.microchip.com/content/dam/mchp/documents/DEV/ProductDocuments/SoftwareTools/MPLABX-v5.50-linux-installer.tar \
    && wget https://www.microchip.com/mplabxc32linux \
    && tar -xvf MPLABX-v5.50-linux-installer.tar \
    && chmod u+x mplabxc32linux \
    && chmod +x MPLABX-v5.50-linux-installer.sh \
    && export USER=root \
    && printf '\n\n\n\n\n\n\n\n\n\n\n\n\n\ny\n\n2\nn\nY\nn\nn\nn\nY\nn\nY\n' | ./MPLABX-v5.50-linux-installer.sh \
    && printf '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ny\n1\n\ny\n\nn\nn\nn\n\n' | ./mplabxc32linux \
    && rm MPLABX-v5.50-linux-installer.tar \
    && rm MPLABX-v5.50-linux-installer.sh \
    && rm mplabxc32linux \
    && rm -rf /opt/microchip/xc32/docs \
    && rm -rf /opt/microchip/xc32/examples \
    && find /opt/microchip/mplabx/v5.50/packs/Microchip -mindepth 1 ! -path '/opt/microchip/mplabx/v5.50/packs/Microchip/PIC32MM*' -delete \
    && rm -rf /opt/microchip/mplabx/v5.50/docs \
    && pip3 install -U 'lager-cli==0.1.98' \
    && wget http://ftp.gnu.org/gnu/gdb/gdb-10.2.tar.gz \
    && tar -xvzf gdb-10.2.tar.gz \
    && mkdir _build \
    && cd _build \
    && /app/gdb-10.2/configure --target=mips --with-expat=yes && make && make install \
    && cd /app \
    && rm -rf _build \
    && rm -rf gdb-10.2 \
    && rm gdb-10.2.tar.gz \
    && apt-get remove -y wget bzip2 gcc gdb make build-essential texinfo \
    && apt-get autoremove -y && apt-get clean -y

ENV PATH $PATH:/opt/microchip/mplabx/v5.50/mplab_platform/bin

